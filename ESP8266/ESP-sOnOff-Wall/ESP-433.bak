
#include <dummy.h>


#include <ESP8266WiFi.h>
#include <PubSubClient.h>

#define ESP8266




/*
  Simple example for receiving

  https://github.com/sui77/rc-switch/
*/

#include "RCSwitch.h"


#define RX433   2


RCSwitch mySwitch = RCSwitch();

const char *ssid = "dacha11";
const char *pass = "paradox1234567";

WiFiClient net;
PubSubClient client(net, "192.168.1.20", 1883);

unsigned long lastMillis = 0;
char *chipId;
String strChipId;

void messageReceived(String topic, String payload, char * bytes, unsigned int length) {
  Serial.print("incoming: ");
  Serial.print(topic);
  Serial.print(" - ");
  Serial.print(payload);
  Serial.println();
}

void connect() {
  Serial.print("checking wifi...");
  while (WiFi.status() != WL_CONNECTED) {
    Serial.print(".");
    delay(1000);
  }

  Serial.print("\nconnecting...");
  while (!client.connect(MQTT::Connect(chipId).set_auth("mike", "zxcvbnm"))) {
    Serial.print(".");
    delay(1000);
  }

  Serial.println("\nconnected!");

//  client.subscribe("/sqowe/controller/433/" + strChipId + "/#");
  // client.unsubscribe("/example");
}

void setup() {
  itoa(ESP.getChipId(), chipId, 10);
  strChipId = String(chipId);
  Serial.begin(115200);
  WiFi.mode(WIFI_STA);

  
  mySwitch.enableReceive(D2);  // Receiver on interrupt 0 => that is pin #2
  Serial.print("I am start\n");
  WiFi.begin(ssid, pass);
//  client.begin("192.168.1.20", net);

  connect();
  
}

void loop() {

  client.loop();
  delay(10); // <- fixes some issues with WiFi stability

  if (!client.connected()) {
    connect();
  }
  
  if (mySwitch.available()) {

    int value = mySwitch.getReceivedValue();

    if (value == 0) {
      Serial.print("Unknown encoding");
    } else {
      Serial.print("Received ");
      Serial.print( mySwitch.getReceivedValue() );
      Serial.print(" / ");
      Serial.print( mySwitch.getReceivedBitlength() );
      Serial.print("bit ");
      Serial.print("Protocol: ");
      Serial.println( mySwitch.getReceivedProtocol() );

      client.publish("/sqowe/controller/433/" + strChipId + "/" + mySwitch.getReceivedValue(), "ON");
    }

    mySwitch.resetAvailable();
  }
}
